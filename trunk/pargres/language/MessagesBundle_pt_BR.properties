querymanager.waiting=Consulta #{0} esperando..
querymanager.error=Erro do gerencia de consulta: {0}
querymanager.readyToGo=Consulta #{0} pronta para ser executada!
serverconnection.queryCreate=Consulta #{0} criada! [tipo = {1}] [sql = {2}]
dbconnection.newconnection=[Conexão {0}] Uma nova conexão foi criada.
dbconnection.closed=[Conexão {0}] Uma conexão foi fechada.
dbconnection.queryexecuted=[Conexão {0}] Consulta executada: {1}
dbconnection.updateexecuted=[Conexão {0}] Atualização executada: {1}
dbconnection.rowsmodified=[Conexão {0}] {1} registros modificados.
dbconnection.prepare=[Conexão {0}] Consulta preparada: {1}
dbconnection.executeprepared=[Conexão {0}] Tempo de execução da consulta: {1}
dbconnectionpool.closed=Pool de conexões foi fechado.
updateManager.ok=Todas atualização efetuadas com sucesso!
updateManager.threadscreated=Gerenciador de atualização criado: {0} threads para processar o update.
updateManager.workerexception=O trabalhador do gerenciador de atualização teve uma exceção: {0}
updateManager.errorOnNode=Erro no nó #{0}
serverconnection.newconnection=Nova conexão criada.
clusterQueryProcessorEngine.addingNode=Conectando a //{0}:{1}/NodeQueryProcessor. Tentativa número: {3}
clusterQueryProcessorEngine.nodeConnected=Conectado a //{0}:{1}/NodeQueryProcessor
clusterQueryProcessorEngine.creatingGlobaQueryTask=Criando tarefa global de execução de consulta!
clusterQueryProcessorEngine.alreadyStarted={0} - start(): já iniciado!
clusterQueryProcessorEngine.shutdown=Desligando...
clusterQueryProcessorEngine.disconnecting=Desconectando do processadores de nó
clusterQueryProcessorEngine.exit=Saiu.
connectionManagerImpl.init=Geneciador de conexão iniciando...
connectionManagerImpl.step1=Processador de consulta do cluster carregado. (1/4)
connectionManagerImpl.step2=Escalonador de consulta carregado. (2/4)
connectionManagerImpl.step3=Balanceador de carga carregado. (3/4)
connectionManagerImpl.step4=Meta-dados do banco de dados carregado. (4/4)
connectionManagerImpl.pargresReady=O Cluster de Banco de Dados ParGRES está pronto para receber requisições...
connectionManagerImpl.metadataReloading=Aguarde por favor... O Meta-dados está sendo carregado.
connectionManagerImpl.metadataReloaded=Meta-dados recarregado.
connectionManagerImpl.register=RMI Bind: porta: {0}, endereço: {1}
connectionManagerImpl.finalize=Running ConnectionManager finalize!
longTransactionQueue.wait=Consulta #{0} na espera de transação longa
longTransactionQueue.blocked=Consulta #{0} esperando por transação longa por Thread #{1}
longTransactionQueue.notYet=Consulta #{0} transação longa, ainda não.
longTransactionQueue.passed=Consulta #{0} passou pelo bloqueio de transação longa da Thread #{1}
longTransactionQueue.blockingIsNull=Thread bloqueante é nula!
longTransactionQueue.blockingIsSame=Thread bloqueante é a mesma!
longTransactionQueue.unblock=Transação longa DESBLOQUEADA por Thread #{0}
longTransactionQueue.block=Transação longa DESBLOQUEADA por Thread #{0}
queryScheduler.added=Consulta #{0} adicionada ao escalonador!
queryScheduler.remove=Consulta #{0} removida do escalonador!
queryScheduler.waitingForUpdateEnd=Escalonador esperando o fim da requisição de atualização...
queryScheduler.waitingForPending=Escalonador esperando o fim das requisições para iniciar a requisição de atualização...
queryScheduler.dispatching=Escalonador liberando a consulta#{0}
queryScheduler.running=Escalonador executando.!
queryScheduler.waitingForMore=Escalonador esperando por mais requisições...
queryScheduler.queryExecuted=Consulta #{0} executada!
queryScheduler.queryError=Erro na consulta #{0}: {1}
globalQueryTaskEngine.createGRC=Tarefa: Criação dos compositores globais de resultado.
globalQueryTaskEngine.createLQTs=Tarefa global de consulta: Iniciar as tarefas locais de consulta.
globalQueryTaskEngine.createLQT=Tarefa: Criando tarefa local de consulta {0} para processar o intervalo ({1} - {2}).
globalQueryTaskEngine.waitingForIntervals=Tarefa global de consulta: Esperando por processamento de intervalos
globalQueryTaskEngine.waitingForLQTs=Tarefa global de consulta: Esperando por fim dos LQTs.
globalQueryTaskEngine.getFinalResult=Tarefa: Obtendo resultado final.
globalQueryTaskEngine.finished=Tarefa Global de Consulta: Terminada.
globalQueryTaskEngine.intervalFinished=Intervalo sob responsabilidade do nó {0} está terminado!
globalQueryTaskEngine.grouperSize=Agrupador {0} tamanho: {1}.
globalQueryTaskEngine.grouperDropped=Agrupador - {0} tabela removida.
localQueryTaskEngine.waiting=LQT {0} esperando pelo compositor distribuído...
localQueryTaskEngine.done=LQT {0} terminou com o compositor distribuído...
localQueryTaskEngine.exception=Exceção de Tarefa Local de Consulta: {0}
localQueryTaskEngine.intervalProcessed=Intervalo ({0}-{1}) processado pelo nó {2}
localQueryTaskEngine.helping=Ajudando {0}
localQueryTaskEngine.refuseToHelp=Recusando oferta de ajuda número {0} recebida do nó {1}
localQueryTaskEngine.refusing=RRecusando oferta de ajuda número{0} originada do nó {1} e recebida do nó {2}
localQueryTaskEngine.resendingOffer=Reenviando oferta!
localQueryTaskEngine.ignored=Ignorado!
localQueryTaskEngine.helpOffer=Oferta de ajuda número {0} enviando a vizinhos.
localQueryTaskEngine.propagateOffer=Propagando oferta de ajuda número {0} originada do nó {1} e recebida do nó {2}
localQueryTaskEngine.acceptOffer=Aceitando oferta de ajuda número {0} originado do nó {1} e recebida do nó {2}
localQueryTaskEngine.acceptanceMsg=Mensagem de aceitação enviando ao {0}
nodeQueryProcessorEngine.running=Processador de Consulta do Nó está sendo executado na porta {0} [{1}]
nodeQueryProcessorEngine.unbinding=[NQP] Unbinding...
queryExecutor.vp=VP: {0} - {1}. Tamanho = {2}
queryExecutorAvp.elapsedTime=QE AVP - Tempo de executação: {0} {1}
resultComposerEngineDistributed.init=Iniciando compositor distribuído {0}...
resultComposerEngineDistributed.finishing=Terminando compositor distribuído {0}...
resultComposerEngineDistributed.sending=Compositor distribuído {0} enviando resultados para o compositor global..."
resultComposerEngineDistributed.finishDistribution=Compositor distribuído {0} {1} {2}
resultComposerEngineGlobal.init=Iniciando compositor distribuído...
resultComposerEngineGlobal.finishing=Terminando compositor distribuído...
resultComposerEngineGlobal.waitingForResults=Esperando os resultados serem consumidos...
resultComposerEngineGlobal.resultsConsumed=Resultados consumidos...
resultComposerEngineLocal.init=Iniciando LRC - {0}
resultComposerEngineLocal.finishLRC=Finalizando LRC - {0} Tempo de execução: {1}
resultComposerEngineLocal.sendingResults=LRC - {0} enviando resultados aos compositores distribuídos...
parser.vpQuery=vpQuery : \n{0}
parser.compositorText=Q.{0} = {1}
parser.groupByText=GroupBy.{0} = {1}
parser.orderByText=OrderBy.{0} = {1}
parser.alias=Q.{0} as {1}
parser.qvpTextType=qvpTextType.{0} = {1}
parser.havingCompositor=Having = {0}
parser.limit=Limit = {0}
grouperImpl.gettingAgregatedResult=Illegal method option {0}